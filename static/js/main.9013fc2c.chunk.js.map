{"version":3,"sources":["components/Job.js","components/Work.js","components/Activities.js","components/ProjectDesc.js","components/Projects.js","components/Skills.js","components/Profile.js","components/Button.js","components/Autocomplete.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["Job","props","className","onChange","companyHandler","defaultValue","defVal","company","positionHandler","position","descriptionHandler","description","onClick","clickHandler","Work","edit","event","handleAddClick","setList","list","id","Date","now","map","job","i","key","moveUp","moveDown","handleRemoveClick","handleFieldChange","Activities","ProjectDesc","titleHandler","title","Projects","Skills","changeHandler","skill","removeHandler","Profile","$imagePreview","picState","src","alt","type","e","handleImageChange","changeFirstName","name","firstname","changeLastName","lastname","setSkills","skills","Button","changeLayout","FreeSolo","useState","search","setSearch","debounce","autoComplete","target","value","users","filter","user","toLowerCase","includes","searchHandler","Menu","buttonHandler","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","storage","db","database","App","setUser","setEdit","loggedIn","setLoggedIn","home","setHome","inputList","setInputList","projectList","setProjectList","setPicState","setName","userMap","useEffect","ref","once","then","doc","data","val","Object","entries","push","sort","work","projects","picURL","catch","error","console","log","onAuthStateChanged","firebaseUser","uid","goHome","alert","_handleImageChange","preventDefault","files","put","on","snapshot","child","getDownloadURL","url","obj","index","splice","temp","length","set","signOut","placeholder","email","document","getElementById","pass","signInWithEmailAndPassword","classList","remove","innerHTML","message","logIn","createUserWithEmailAndPassword","signUp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9013fc2c.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Job = (props) => {\n\n    return (\n        <div className={props.className}>\n            <label>Company Name:</label>\n            <br/>\n            <input onChange={props.companyHandler} defaultValue={props.defVal.company}/>\n            <br/>\n            <br/>\n            <label>Job Title: </label>\n            <br/>\n            <input onChange={props.positionHandler} defaultValue={props.defVal.position}/>\n            <br/>\n            <br/>\n            <label>Job Description: </label>\n            <br/>\n            <textarea className=\"description\" onChange={props.descriptionHandler} defaultValue={props.defVal.description}></textarea>\n            <br/>\n            <br/>\n            <button onClick={props.clickHandler}>Remove</button>\n        </div>\n    )\n}\n\n\nexport default Job;","import React from \"react\";\nimport Job from \"./Job\";\n\nconst Work = (props) => {\n\n    if (props.edit) {\n        return (\n            <div className=\"section\">\n                <h1>Work Experience</h1>\n                <button onClick={(event) => props.handleAddClick(event, props.setList, props.list, {id: Date.now(), company: \"\", position: \"\", description: \"\", })}>Add</button>\n                {props.list.map((job, i) => {\n                    return (\n                    <div key={job.id} className=\"container\">\n                        <div className=\"arrows\">\n                            <button onClick={(event) => props.moveUp(event, i, props.list, props.setList)}>Up</button>\n                            <br/>\n                            <button onClick={(event) => props.moveDown(event, i, props.list, props.setList)}>Down</button>\n                        </div>\n                        <div className=\"content\">\n                            <Job \n                                className=\"section\"\n                                clickHandler={(event) => props.handleRemoveClick(event, i, props.list, props.setList)}\n                                companyHandler={(event) => props.handleFieldChange(event, props.list, i, \"company\")}\n                                positionHandler={(event) => props.handleFieldChange(event, props.list, i, \"position\")}\n                                descriptionHandler={(event) => props.handleFieldChange(event, props.list, i, \"description\")}\n                                defVal={props.list[i]} />\n                        </div>\n                    </div>\n                    )\n                }\n\n                )}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"section\">\n                <h1>Work Experience</h1>\n                {props.list.map((job) => {\n                    return (\n                        <div key={job.id} className=\"section\">\n                            <h3 className=\"title\">{job.company}</h3>\n                            <h4 className=\"position\">{job.position}</h4>\n                            <h4 className=\"description_saved\">{job.description}</h4>\n                        </div>\n                    )\n                })\n                }\n\n                \n            </div>\n        )\n    }\n\n}\n\nexport default Work;","import React from \"react\";\n\n\nconst Activities = () => {\n\n\n    return (\n        <div className=\"section\">\n            <h1>Leadership/Activities</h1>\n        </div>\n    )\n\n}\n\nexport default Activities;","import React from \"react\";\n\n\nconst ProjectDesc = (props) => {\n\n    return (\n        <div className={props.className}>\n            <label>Project Title: </label>\n            <br/>\n            <input onChange={props.titleHandler} defaultValue={props.defVal.title}/>\n            <br/>\n            <br/>\n            <label>Project Description: </label>\n            <br/>\n            <textarea className=\"description\" onChange={props.descriptionHandler} defaultValue={props.defVal.description}></textarea>\n            <br/>\n            <br/>\n            <button onClick={props.clickHandler}>Remove</button>\n        </div>\n\n    )\n    \n}\n\nexport default ProjectDesc;","import React from \"react\";\nimport ProjectDesc from \"./ProjectDesc\";\n\n\nconst Projects = (props) => {\n\n    if (props.edit) {\n        return (\n            <div className=\"section\">\n                <h1>Projects</h1>\n                <button onClick={(event) => props.handleAddClick(event, props.setList, props.list, {id: Date.now(), title: \"\", description: \"\", })}>Add</button>\n                {props.list.map((job, i) => {\n                    return (\n                    <div key={job.id} className=\"container\">\n                        <div className=\"arrows\">\n                        <button onClick={(event) => props.moveUp(event, i, props.list, props.setList)}>Up</button>\n                            <br/>\n                            <button onClick={(event) => props.moveDown(event, i, props.list, props.setList)}>Down</button>\n                        </div>\n                        <div className=\"content\">\n                            <ProjectDesc\n                                className=\"section\"\n                                titleHandler={(event) => props.handleFieldChange(event, props.list, i, \"title\")}\n                                descriptionHandler={(event) => props.handleFieldChange(event, props.list, i, \"description\")}\n                                clickHandler={(event) => props.handleRemoveClick(event, i, props.list, props.setList)}\n                                defVal={props.list[i]}/>\n                        </div>\n                    </div>\n                    )\n                }\n\n                )}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"section\">\n                <h1>Projects</h1>\n                {props.list.map((job) => {\n                    return (\n                        <div key={job.id} className=\"section\">\n                            <h3>{job.title}</h3>\n                            <h4>{job.description}</h4>\n                        </div>\n                    )\n                })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Projects;","import React from \"react\";\n\n\nconst Skills = (props) => {\n\n\n    return (\n        <div>\n            <input onChange={props.changeHandler} defaultValue={props.defVal.skill}/>\n            <button onClick={props.removeHandler}>Remove</button>\n        </div>\n    )\n\n}\n\nexport default Skills;","import React from \"react\";\nimport Skills from \"./Skills\";\n\n\nconst Profile = (props) => {\n\n\n    let $imagePreview = null;\n\n    if (props.picState) {\n        $imagePreview = (<img className=\"picture\" src={props.picState} alt={props.picState}/>);\n    } else {\n        $imagePreview = (<img src={props.picState} alt=\"Add profile pic\"/>);\n    }\n\n    if (props.edit) {\n        return (\n            <div className=\"section\">\n                <h1>Profile</h1>\n                <div>\n                    <div className=\"imgPreview\">\n                        {$imagePreview}\n                    </div>\n                </div>\n                    <input className=\"fileInput\" \n                        type=\"file\"\n                        onChange={(e)=>props.handleImageChange(e)} />\n                <br/>\n                <br/>\n                <label>First Name: </label>\n                <input onChange={(event) => props.changeFirstName(event)} defaultValue={props.name.firstname} />\n                <br/>\n                <br/>\n                <label>Last Name: </label>\n                <input onChange={(event) => props.changeLastName(event)} defaultValue={props.name.lastname} />\n                <br/>\n                <br/>\n                <h4>Skills</h4>\n                <button onClick={(event) => props.handleAddClick(event, props.setSkills, props.skills, {skill: '', id: Date.now()})}>Add</button>\n                {props.skills.map((skill, i) => {\n                    return (\n                        <div key={skill.id}>\n                            <Skills\n                                defVal={props.skills[i]}\n                                changeHandler={(event) => props.handleFieldChange(event, props.skills, i, \"skill\")}\n                                removeHandler={(event) => props.handleRemoveClick(event, i, props.skills, props.setSkills)}\n                                />\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"section\">\n                <h1>Profile</h1>\n                <div>\n                    <div className=\"imgPreview\">\n                    {$imagePreview}\n                    </div>\n                    <h2>Name: {props.name.firstname} {props.name.lastname}</h2>\n                    <h4>Skills:</h4>\n                    {props.skills.map((skill) => {\n                        return (\n                            <div key={skill.id}>\n                                <h4 className=\"skill\">{skill.skill}</h4>\n                            </div>\n                        )\n                    }\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from \"react\";\n\n\nconst Button= (props) => {\n\n    if (props.edit) {\n        return (<button onClick={(event) => props.changeLayout(event)}>Save</button>);\n    } else {\n        return (<button onClick={(event) => props.changeLayout(event)}>Edit</button>);\n    }\n\n}\n\nexport default Button;","import React, {useState} from 'react';\nimport { debounce } from \"throttle-debounce\";\n\nconst FreeSolo = (props) => {\n\n    const [search, setSearch] = useState('');\n\n    const changeHandler = debounce(500, setSearch);\n\n    return (\n        <form\n            className=\"search\"\n            >\n            <input \n                type=\"search\"\n                className=\"searchBar\"\n                autoComplete=\"off\"\n                onChange={(event) => changeHandler(event.target.value)}\n                />\n            <ul id=\"autocomplete\">\n                {props.users\n                    .filter(user => user.toLowerCase().includes(search.toLowerCase()))\n                    .map((user, i) => {\n                        return (\n                        <li \n                            key={i} \n                            onClick={event => {\n                                    props.searchHandler(event, user);\n                                }\n                            }\n                            >\n                            <p>{user}</p>\n                        </li>\n                        )\n                })\n                }\n            </ul>\n        </form>\n    );\n}\n\nexport default FreeSolo;","import React from \"react\";\nimport FreeSolo from \"./Autocomplete\";\n\nconst Menu= (props) => {\n\n    return (\n        <div className=\"section\">\n            <button onClick={props.buttonHandler}>Home</button>\n            {/* <button className=\"search_button\" onClick={props.searchHandler}>Submit</button>\n            <input className=\"search\" type=\"text\" placeholder=\"Search\"/> */}\n            <FreeSolo \n                users={props.users}\n                searchHandler={props.searchHandler}\n                />\n        </div>\n    )\n}\n\nexport default Menu;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Work from \"./components/Work\";\nimport Activities from \"./components/Activities\";\nimport Projects from \"./components/Projects\";\nimport Profile from \"./components/Profile\";\nimport Button from './components/Button';\nimport Menu from './components/Menu'\nimport Firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/database\"\n\n// import {useAuthState} from \"react-firebase-hooks/auth\";\n// import {useCollectionData} from \"react-firebase-hooks/firestore\";\n\n// Your web app's Firebase configuration\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n  var firebaseConfig = {\n    apiKey: \"AIzaSyCTjnjjD_pvjUKqx-YuqO4nHx0MdwMGmX0\",\n    authDomain: \"comp426-final-3da5e.firebaseapp.com\",\n    databaseURL: \"https://comp426-final-3da5e.firebaseio.com\",\n    projectId: \"comp426-final-3da5e\",\n    storageBucket: \"comp426-final-3da5e.appspot.com\",\n    messagingSenderId: \"467209345613\",\n    appId: \"1:467209345613:web:fe152bfe8a5053c7169a04\",\n    measurementId: \"G-NJ17HP93GH\"\n  };\n// Initialize Firebase\nFirebase.initializeApp(firebaseConfig);\nconst auth = Firebase.auth();\nconst storage = Firebase.storage();\nconst db = Firebase.database();\n\nconst App = () => {\n\n  const [user, setUser] = useState(null);\n\n  const [edit, setEdit] = useState(false);\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const [home, setHome] = useState(true);\n\n  // Work\n\n  const [inputList, setInputList] = useState([]);\n\n  // Projects\n\n  const [projectList, setProjectList] = useState([]);\n\n  // Profile\n\n  const [picState, setPicState] = useState('');\n\n  const [name, setName] = useState({firstname: '', lastname: ''});\n\n  const [skills, setSkills] = useState([]);\n\n  let userMap = {};\n  let users = []\n\n  useEffect(() => {\n    db.ref(\"users/\").once('value').then(function (doc) {\n      let data = doc.val();\n      for (const [key, value] of Object.entries(data)) {\n        if (key !== user && key !== \"null\") {\n          users.push(value.name.firstname + \" \" + value.name.lastname);\n          userMap[value.name.firstname + \" \" + value.name.lastname] = key;\n        }\n      }\n      users.sort();\n    })\n  }, );\n\n  useEffect(() => {\n    if (user) {\n      // firestore.collection(\"users\").doc(user).get().then( async function (doc) {\n      db.ref(\"users/\" + user).once('value').then(function (doc) {\n        if (doc) {\n          let data = doc.val();\n          data.name ? setName(data.name) : setName({firstname: '', lastname: ''})\n          data.work ? setInputList(data.work) : setInputList([]);\n          data.projects ? setProjectList(data.projects) : setProjectList([]);\n          data.skills ? setSkills(data.skills) : setSkills([]);\n          data.picURL ? setPicState(data.picURL) : setPicState('')\n          setEdit(false);\n            // doc.data() will be undefined in this case\n        }\n      }).catch(function(error) {\n        console.log(\"No such document!\");\n        setInputList([]);\n        setName({firstname: '', lastname: ''});\n        setProjectList([]);\n        setSkills([]);\n        setPicState('')\n        setEdit(true);\n      })\n    }\n  }, [user])\n\n  const changeLayout = (event) => {\n    if (edit) {\n      if (name.firstname === '' || name.lastname === '') {\n        alert(\"Please input your first and last name before saving\")\n        return;\n      }\n      db.ref('users/' + user).set({\n        name: name,\n        work: inputList,\n        projects: projectList,\n        skills: skills,\n        picURL: picState\n      })\n    }\n    setEdit(!edit);\n  }\n\n  const logIn = (event) => {\n    event.preventDefault();\n    const email = document.getElementById(\"txtEmail\");\n    const pass = document.getElementById(\"txtPass\");\n    const promise = auth.signInWithEmailAndPassword(email.value, pass.value);\n    promise\n      .catch(e => {\n        let error = document.getElementById(\"error\");\n        error.classList.remove(\"hide\");\n        error.innerHTML = e.message;\n      });\n  }\n\n  const signUp = (event) => {\n    event.preventDefault();\n    const email = document.getElementById(\"txtEmail\");\n    const pass = document.getElementById(\"txtPass\");\n    const promise = auth.createUserWithEmailAndPassword(email.value, pass.value);\n    promise\n      .then(() => {\n        storage\n          .ref(\"profile_pics\")\n          .child(\"blank.png\")\n          .getDownloadURL()\n          .then(url => {\n            setPicState(url)\n          });\n        db.ref(\"users/\" + user).set({\n          name: name,\n          work: inputList,\n          projects: projectList,\n          skills: skills,\n          picURL: picState\n        })\n      })\n      .catch(e => {\n        let error = document.getElementById(\"error\");\n        error.classList.remove(\"hide\");\n        error.innerHTML = e.message;\n      });\n  }\n\n  auth.onAuthStateChanged(firebaseUser => {\n    if (firebaseUser) {\n      setUser(firebaseUser.uid);\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n      setHome(true);\n    }\n  })\n\n  const logOut = (event) => {\n    Firebase.auth().signOut();\n  }\n\n  const changeFirstName = (event) => {\n    setName({firstname: event.target.value, lastname: name.lastname});\n  }\n\n  const changeLastName = (event) => {\n      setName({firstname: name.firstname, lastname: event.target.value});\n  }\n\n  const goHome = (event) => {\n    db.ref(\"users/\" + user).once('value').then(function (doc) {\n      if (doc) {\n        let data = doc.val();\n        setName(data.name);\n        data.work ? setInputList(data.work) : setInputList([]);\n        data.projects ? setProjectList(data.projects) : setProjectList([]);\n        data.skills ? setSkills(data.skills) : setSkills([]);\n        data.picURL ? setPicState(data.picURL) : setPicState('')\n        setEdit(false);\n      }\n    });\n    setHome(true);\n  }\n\n  const search = (event, name) => {\n    if (!edit) {\n      db.ref(\"users/\" + userMap[name]).once('value').then(function (doc) {\n        if (doc) {\n          let data = doc.val();\n          setName(data.name);\n          data.work ? setInputList(data.work) : setInputList([]);\n          data.projects ? setProjectList(data.projects) : setProjectList([]);\n          data.skills ? setSkills(data.skills) : setSkills([]);\n          data.picURL ? setPicState(data.picURL) : setPicState('')\n          setEdit(false);\n        }\n      });\n      setHome(false);\n    } else {\n      alert(\"Please save information\")\n    }\n  }\n  \n  const _handleImageChange = (e) => {\n    e.preventDefault();\n\n    let file = e.target.files[0];\n\n\n    if (file == null) {\n        return;\n    }\n\n    let uploadTask = storage.ref(`profile_pics/${user}`).put(e.target.files[0]);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {},\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(\"profile_pics\")\n          .child(user)\n          .getDownloadURL()\n          .then(url => {\n            setPicState(url);\n          });\n      }\n    );\n  }\n\n  // General Use Functions\n\n  const handleAddClick = (event, setList, list, obj) => {\n    setList([...list, obj]);\n  }\n\n  const handleRemoveClick = (event, index, inputList, setList) => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setList(list);\n  }\n\n  const moveUp = (event, index, inputList, setList) => {\n      console.log(inputList);\n      if (index !== 0) {\n          const list = [...inputList];\n          let temp = list[index];\n          list[index] = list[index-1];\n          list[index - 1] = temp;\n          setList(list);\n      }\n  }\n  \n  const moveDown = (event, index, inputList, setList) => {\n      if (index !== inputList.length - 1) {\n          const list = [...inputList];\n          let temp = list[index];\n          list[index] = list[index+1];\n          list[index + 1] = temp;\n          setList(list);\n      }\n  }\n\n  const handleFieldChange = (event, list, index, key) => {\n    list[index][key] = event.target.value;\n  }\n\n  if (!loggedIn) {\n    \n    return (\n      \n      <form id=\"portal\">\n\n        <h4 id=\"error\" className=\"err hide\">Invalid Credentials</h4>\n        <input id=\"txtEmail\" className=\"sign-in\" placeholder=\"Email\"></input>\n        <br/>\n        <br/>\n        <input id=\"txtPass\" className=\"sign-in\" placeholder=\"Password\"></input>\n        <br/>\n        <br/>\n      \n        <button onClick={(event) => logIn(event)}>Log In</button>\n        <button onClick={(event) => signUp(event)}>Sign Up</button>\n\n      </form>\n    );\n\n  } else {\n    if (home) {\n      return (\n        <div>\n          <Menu \n            buttonHandler={goHome}\n            searchHandler={search}\n            users={users}\n            />\n          <div className=\"column left\">\n            <Profile \n              edit={edit}\n              name = {name}\n              skills = {skills}\n              setSkills = {setSkills}\n              picState={picState}\n              handleImageChange={_handleImageChange}\n              handleAddClick={handleAddClick}\n              handleRemoveClick={handleRemoveClick}\n              handleFieldChange={handleFieldChange}\n              changeFirstName={changeFirstName}\n              changeLastName={changeLastName}\n              />\n          </div>\n          <div className=\"column right\">\n              <Work \n                edit={edit}\n                list={inputList}\n                setList={setInputList}\n                handleAddClick={handleAddClick}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                handleRemoveClick={handleRemoveClick}\n                handleFieldChange={handleFieldChange}\n                />\n              <Activities edit={edit}/>\n              <Projects\n                edit={edit}\n                list={projectList}\n                setList={setProjectList}\n                handleAddClick={handleAddClick}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                handleRemoveClick={handleRemoveClick}\n                handleFieldChange={handleFieldChange}\n                />\n              <Button \n                edit={edit}\n                changeLayout={changeLayout}/>\n              <button onClick={logOut}>Log Out</button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Menu \n            buttonHandler={goHome}\n            searchHandler={search}\n            users={users}\n            />\n            <div className=\"column left\">\n            <Profile \n              edit={edit}\n              name = {name}\n              skills = {skills}\n              setSkills = {setSkills}\n              picState={picState}\n              handleImageChange={_handleImageChange}\n              handleAddClick={handleAddClick}\n              handleRemoveClick={handleRemoveClick}\n              handleFieldChange={handleFieldChange}\n              changeFirstName={changeFirstName}\n              changeLastName={changeLastName}\n              />\n          </div>\n          <div className=\"column right\">\n              <Work \n                edit={edit}\n                list={inputList}\n                setList={setInputList}\n                handleAddClick={handleAddClick}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                handleRemoveClick={handleRemoveClick}\n                handleFieldChange={handleFieldChange}\n                />\n              <Activities edit={edit}/>\n              <Projects\n                edit={edit}\n                list={projectList}\n                setList={setProjectList}\n                handleAddClick={handleAddClick}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                handleRemoveClick={handleRemoveClick}\n                handleFieldChange={handleFieldChange}\n                />\n            </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}